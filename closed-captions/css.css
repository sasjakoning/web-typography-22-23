:root {
	--lightgray: #2C3E40;
	--gray: #1B2626;
	--black: #080D0C;
	--darkgreen: #147358;
	--lightgreen: #30BF97;
	--beige: #9EA692;
}

body {
	background-color: var(--lightgreen);
	position: relative;
}

body::before {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	mix-blend-mode: darken;
	mix-blend-mode: difference;
	mix-blend-mode: exclusion;
	mix-blend-mode: multiply;
	background-color: rgb(198, 68, 68);
	filter: url(noise.svg#noiseFilter);
}

/* **********************************************
Basic mechanics
Hide all paragraphs by default
Show them when they receive the class 'on'
Hide them when they receive the class 'off'
Feel free to adjust the defaults to your needs.
********************************************** */
#closed-captions p {
	opacity: 0;
	transition: .05s;
	position: absolute;
	color: white;
	z-index: 100;
}
#closed-captions .on {
	opacity: 1;
}
#closed-captions .off {
	transition: .2s;
	opacity: 0;
}

/* robot voice */
.voice1 {
	font-family: monospace;
}

/* main character voice */
.voice2 {
	font-weight: bold;
	font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
	right: 10%;
}

/* fuck off skinjob */
.voice3 {
	font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
	font-style: italic;
	font-size: 0em;
	top: 28%;
	right: 62%;
	max-width: 6em;
}

.voice3.on {
	animation: voice3-1 .3s 3, voice3-2 .8s;
	font-size: 1em;
	transform-origin: middle left;
}

@keyframes voice3-1 {
	0%, 100% {
		transform: translateX(0);
	}
	20% {
		transform: translateX(.1em);
	}
	40% {
		transform: translateX(-.1em);
	}
	60% {
		transform: translateX(.1em);
	}
	80% {
		transform: translateX(-.1em);
	}
}
/* **********************************************
The first paragraph, with extended timing for 
	all siblings. Basically what it does is that
	it shows the text after a delay, which 
	corresponds with the time that the word is
	spoken.
You probably want to change the styling.
********************************************** */
.p0 span {
	opacity: 0;
}
.p0.on span:first-of-type {
	opacity: 1;
	transition: 0s;
}
.p0.on span:nth-of-type(2) {
	opacity: 1;
	transition: 0s .4s;
	margin-right: -.25em;
}
.p0.on span:nth-of-type(3) {
	opacity: 1;
	transition: 0s .5s;
	margin-right: -.25em;
}
.p0.on span:nth-of-type(4) {
	opacity: 1;
	transition: 0s .7s;
	margin-right: -.25em;
}
.p0.on span:nth-of-type(5) {
	opacity: 1;
	transition: 0s 1.1s;
	margin-right: -.25em;
}
.p0.on span:nth-of-type(6) {
	opacity: 1;
	transition: 0s 1.4s;
	margin-right: -.25em;
}
.p0.on span:nth-of-type(7) {
	opacity: 1;
	transition: 0s 1.7s;
	margin-right: -.25em;
}
.p0.on span:nth-of-type(8) {
	opacity: 1;
	transition: 0s 2s;
}
.p0.on span:nth-of-type(9) {
	opacity: 1;
	transition: 0s 3s;
}
.p0.on span:nth-of-type(10) {
	opacity: 1;
	transition: 0s 3.2s;
}
.p0.on span:nth-of-type(11) {
	opacity: 1;
	transition: 0s 3.7s;
}

.p1.on {
	font-size: 20px;
}

/* **********************************************
Sounds.
	You can style the whole body, or you can 
	style anything within the body the moment
	a sound starts.
*********************************************  */

.sound0 {
	background-color: var(--gray);
}

/* alarm sound */
.sound1 {
	animation: sound1 1.5s ease-in-out;
}

@keyframes sound1 {
	0%, 100%{
		background-color: none;
	}
	50% {
		background-color: var(--lightgreen);
	}
}

.sound2 #video-mask {
	animation: sound2-1 1.5s ease-in-out;
}

@keyframes sound2-1 {
	0%, 100% {
		border: 0px solid var(--lightgreen);
	}
	50% {
		border: 4px solid var(--lightgreen);
	}
}

.sound2::before {
	content: "";
	position: absolute;
	border-radius: 100%;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	background: radial-gradient(circle, rgba(48,191,151,1) 0%, rgba(48,191,151,0) 70%);
	z-index: -10;
	animation: sound2-2 1.5s ease-in-out;
}

@keyframes sound2-2 {
	0% {
		width: 10em;
		height: 10em;
		left: 20%;
	}
	50% {
		width: 40em;
		height: 40em;
		left: 50%;
	}
	100% {
		width: 10em;
		height: 10em;
		left: 80%;
	}
}

/* alarm sound, fuck off skinjob */
.sound4 #video-mask {
	animation: sound4-1 .3s 2 ease-in-out, sound4-3 .6s ease-in-out , sound4-2 1s 7s ease-in-out;
}

@keyframes sound4-1 {
	0%, 100% {
		transform: translateX(0);
	}
	20% {
		transform: translateX(.5em);
	}
	40% {
		transform: translateX(-.5em);
	}
	60% {
		transform: translateX(.5em);
	}
	80% {
		transform: translateX(-.5em);
	}
}


@keyframes sound4-2 {
	0%, 100% {
		transform: translateX(0em);
	}
	50% {
		transform: translateX(4em);
	}
}

@keyframes sound4-3 {
	0%, 100% {
		box-shadow: 0px 0px 35px 20px rgba(48, 191, 151, 0);
	}
	50% {
		box-shadow: 0px 0px 35px 20px rgba(48, 191, 151, 0.5);
	}
}

/* alarm again, move aside */
.sound6 #video-mask {
	box-shadow: 0px 0px 0px transparent;
	animation: sound6-1 .3s 2 ease-in-out, sound6-3 .6s ease-in-out, sound6-2 1.6s 1.6s ease-in-out;
}

@keyframes sound6-1 {
	0%, 100% {
		transform: translateX(0);
	}
	20% {
		transform: translateX(.5em);
	}
	40% {
		transform: translateX(-.5em);
	}
	60% {
		transform: translateX(.5em);
	}
	80% {
		transform: translateX(-.5em);
	}
}


@keyframes sound6-2 {
	0%, 100% {
		transform: translateX(0em);
	}
	50% {
		transform: translateX(-4em);
	}
}

@keyframes sound6-3 {
	0%, 100% {
		box-shadow: 0px 0px 35px 20px rgba(48, 191, 151, 0);
	}
	50% {
		box-shadow: 0px 0px 35px 20px rgba(48, 191, 151, 0.5);
	}
}


/* interrogation beep */
.sound8 {
	transition: .5s all;
	transition-delay: .5s;
	background-color: var(--beige);
}

@keyframes sound8mask {
	from {
		transform: scale(1);
	}
	to {
		transform: scale(1.2);
	}
}

.sound8 #video-mask {
	position: relative;
	filter: none;
	transform: translateX(0);
	box-shadow: 0px 0px 0px transparent;
	animation: sound8-1 .3s 2 ease-in-out, sound8-2 .6s ease-in-out, sound8mask 46s, distort .5s 92;
}

@keyframes distort {
	0%, 100% {
		filter: url(cssfilter.svg#filter1);
	}
	25% {
		filter: url(cssfilter.svg#filter2);
	}
	50% {
		filter: url(cssfilter.svg#filter3);
	}
	75% {
		filter: url(cssfilter.svg#filter4);
	}
}

@keyframes sound8-1 {
	0%, 100% {
		transform: translateX(0);
	}
	20% {
		transform: translateX(.5em);
	}
	40% {
		transform: translateX(-.5em);
	}
	60% {
		transform: translateX(.5em);
	}
	80% {
		transform: translateX(-.5em);
	}
}

@keyframes sound8-2 {
	0%, 100% {
		box-shadow: 0px 0px 35px 20px rgba(48, 191, 151, 0);
	}
	50% {
		box-shadow: 0px 0px 35px 20px rgba(48, 191, 151, 0.5);
	}
}

.sound8::before, .sound8::after {
	content: "";
	position: absolute;
	width: 100%;
	height: 0px;
	background: var(--gray);
	transform: translate(0, 0);
	box-shadow: 0px solid transparent;
	z-index: -10;
	border-radius: 0;
	/* box-shadow: 0px 0px 35px 20px var(--gray); */
	animation: sound8-3 56s 1s ease-out forwards, sound8-3 .5s 46s reverse forwards;
}

.sound8::before {
	top: 0;
	right: 0;
	left: 0;
}

.sound8::after {
	bottom: 0;
	right: 0;
	left: 0;
}

@keyframes sound8-3 {
	from {
		height: 0%;
	}
	to {
		height: 55%;
	}
}



/* **********************************************
Basic layout.
	Place the video in the center of the page.
*********************************************  */

body {
	display: grid;
	height: 100vh;
	margin: 0;
	justify-content: center;
}
#video-container {
	margin: auto;
}
#video-mask {
	aspect-ratio: 240.5/100;
	display: grid;
	overflow: hidden;
	align-content: center;
	transition: 1s;
}

iframe {
	width: 80vw;
	height: 53.33333333vw;
	margin-top: -0.35vw;
}
